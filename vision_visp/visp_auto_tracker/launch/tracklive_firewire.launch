<!-- -*- xml -*-

     This tutorial relies on a live video sequence acquired with a 
     firewire camera in front of a QR code planar target. The model 
     corresponding to this target is given into the models directory 
     of this package.

     Camera parameters are read from models/calibration.ini file. They 
     need to be the one of your camera.

     Here we use the viewer coming with visp_tracker package to 
     display the pose estimation results.

     See http://www.ros.org/wiki/visp_auto_tracker for more information.

  -->
<launch>
  <param name="/camera_prefix" type="string" value="/" />
		
  <!-- Launch the tracking node -->
  <node pkg="visp_auto_tracker" type="visp_auto_tracker" name="visp_auto_tracker">
    <param name="model_path" value="$(find visp_auto_tracker)/models" />
    <param name="model_name" value="pattern" />
    <param name="debug_display" value="True" />
	      
    <remap from="/visp_auto_tracker/camera_info" to="/camera/camera_info"/>
    <remap from="/visp_auto_tracker/image_raw" to="/camera/image_raw"/>	
  </node>

  <!-- Launch the firewire camera acquisition node -->
  <node pkg="camera1394" type="camera1394_node" name="my_camera1394_node" args="_video_mode:=640x480_rgb8" >
    <param name="camera_info_url" value="package://visp_auto_tracker/models/calibration.ini" />
    <param name="frame_id" value="/map" />
  </node>
  
  <!-- Launch the viewer -->
  <node pkg="visp_tracker" type="visp_tracker_viewer" name="tracker_mbt_viewer" output="screen">
    <param name="frame_size" value="0.1" />
    <remap from="/image_rect" to="/camera/image_raw"/>
    <remap from="/camera_info" to="/camera/camera_info"/>
    <remap from="/object_position_covariance" to="/visp_auto_tracker/object_position_covariance"/>
    <remap from="/object_position" to="/visp_auto_tracker/object_position"/>
  </node>

</launch>
